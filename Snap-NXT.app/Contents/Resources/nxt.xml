<blocks app="Snap! 4.0, http://snap.berkeley.edu" version="1"><block-definition s="move motor %&apos;motor&apos; %&apos;degrees&apos; degrees at %&apos;speed&apos; speed" type="command" category="other"><inputs><input type="%txt">a</input><input type="%n">360</input><input type="%n">100</input></inputs><script><block s="doIfElse"><block s="reportAnd"><block s="reportAnd"><block s="reportAnd"><block s="reportLessThan"><l>-101</l><block var="speed"/></block><block s="reportLessThan"><block var="speed"/><l>101</l></block></block><block s="reportLessThan"><block var="degrees"/><l>361</l></block></block><block s="reportListContainsItem"><block s="reportNewList"><list><l>a</l><l>b</l><l>c</l></list></block><block var="motor"/></block></block><script><block s="doIfElse"><block s="reportNot"><block s="reportEquals"><block s="reportMonadic"><l><option>abs</option></l><block var="speed"/></block><block var="speed"/></block></block><script><block s="doRun"><block s="reifyReporter"><autolambda><block s="reportURL"><block s="reportJoinWords"><list><l>localhost:1330/</l><l>move</l><block var="motor"/><l>0</l><block s="reportMonadic"><l><option>abs</option></l><block var="speed"/></block><l>0</l><block var="degrees"/><l>0</l><l>-</l></list></block></block></autolambda><list></list></block><list></list></block></script><script><block s="doRun"><block s="reifyReporter"><autolambda><block s="reportURL"><block s="reportJoinWords"><list><l>localhost:1330/</l><l>move</l><block var="motor"/><l>0</l><block s="reportMonadic"><l><option>abs</option></l><block var="speed"/></block><l>0</l><block var="degrees"/><l>0</l><l>+</l></list></block></block></autolambda><list></list></block><list></list></block></script></block></script><script><custom-block s="throw %s"><l>catchtag</l></custom-block></script></block></script></block-definition><block-definition s="throw %&apos;cont&apos;" type="command" category="control"><inputs><input type="%s">catchtag</input></inputs><script><block s="doRun"><block var="cont"/><list></list></block></script></block-definition><block-definition s="touch sensor pressed?" type="predicate" category="other"><inputs></inputs><script><block s="doIfElse"><block s="reportEquals"><block s="reportURL"><l>localhost:1330/nxttouch</l></block><l>True</l></block><script><block s="doReport"><block s="reportTrue"></block></block></script><script><block s="doIfElse"><block s="reportEquals"><l>False</l><block s="reportURL"><l>localhost:1330/nxttouch</l></block></block><script><block s="doReport"><block s="reportFalse"></block></block></script><script><block s="doReport"><block s="reportFalse"></block></block></script></block></script></block></script></block-definition><block-definition s="light sensor value" type="reporter" category="other"><inputs></inputs><script><block s="doReport"><block s="reportURL"><l>localhost:1330/nxtlight</l></block></block></script></block-definition><block-definition s="sound sensor value" type="reporter" category="other"><inputs></inputs><script><block s="doReport"><block s="reportURL"><l>localhost:1330/nxtsound</l></block></block></script></block-definition><block-definition s="ultrasonic sensor value" type="reporter" category="other"><inputs></inputs><script><block s="doReport"><block s="reportURL"><l>localhost:1330/nxtultrasonic</l></block></block></script></block-definition><block-definition s="graph sound [example]" type="command" category="other"><inputs></inputs><script><block s="clear"></block><block s="up"></block><block s="setXPosition"><l>-217</l></block><block s="setYPosition"><l>-100</l></block><block s="down"></block><block s="doForever"><script><block s="doIf"><block s="reportGreaterThan"><block s="xPosition"></block><l>239</l></block><script><block s="up"></block><block s="clear"></block><block s="setXPosition"><l>-217</l></block><block s="down"></block></script></block><block s="setYPosition"><block s="reportDifference"><custom-block s="sound sensor value"></custom-block><l>100</l></block></block><block s="changeXPosition"><l>5</l></block></script></block></script></block-definition><block-definition s="play tone %&apos;tone&apos; for %&apos;ms&apos; ms" type="command" category="other"><inputs><input type="%n"></input><input type="%n"></input></inputs><script><block s="doRun"><block s="reifyReporter"><autolambda><block s="reportURL"><block s="reportJoinWords"><list><l>localhost:1330/tone</l><block var="tone"/><l>a</l><block var="ms"/></list></block></block></autolambda><list></list></block><list></list></block></script></block-definition><block-definition s="catch %&apos;tag&apos; %&apos;action&apos;" type="command" category="control"><inputs><input type="%upvar"></input><input type="%cs"></input></inputs><script><block s="doCallCC"><block s="reifyScript"><script><block s="doSetVar"><l>tag</l><block var="cont"/></block><block s="doRun"><block var="action"/><list></list></block></script><list><l>cont</l></list></block></block></script></block-definition><block-definition s="throw %&apos;cont&apos;" type="command" category="control"><inputs><input type="%s">catchtag</input></inputs><script><block s="doRun"><block var="cont"/><list></list></block></script></block-definition><block-definition s="catch %&apos;tag&apos; %&apos;value&apos;" type="reporter" category="control"><inputs><input type="%upvar"></input><input type="%anyUE"></input></inputs><script><block s="doCallCC"><block s="reifyScript"><script><block s="doSetVar"><l>tag</l><block var="cont"/></block><block s="doReport"><block s="evaluate"><block var="value"/><list></list></block></block></script><list><l>cont</l></list></block></block></script></block-definition></blocks>